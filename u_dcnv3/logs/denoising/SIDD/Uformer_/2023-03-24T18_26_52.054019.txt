Namespace(agc=True, att_se=False, aug_times=0, batch_size=32, checkpoint=50, data_dir='data/', dataset='SIDD', datasets=0, dd_in=3, display=10, download=False, embed_dim=32, env='_', epoch=250, eval_workers=4, gpu='1', jump=1, lr_initial=0.0002, mode='denoising', model='Uformer', model_dir='model/rf/', model_name='model_rf_full_regular_SEG_inter0.5.pkl', modulator=False, n_colors=1, n_feats=64, n_resblocks=10, n_resgroups=10, norm_layer='nn.LayerNorm', optimizer='adamw', pretrain_weights='./log/Uformer_B/models/model_best.pth', rate=2, reduction=16, result_dir='NL_SEG/rf/regular_0.5', save_dir='./logs/', save_images=False, save_result=1, scales=[1], sigma=25, step_lr=50, test_data_dir='data/7m_shots_0201_0329', token_mlp='leff', token_projection='linear', train_data_num=1000, train_workers=4, verbose1=True, weight_decay=0.02, win_size=8)
Uformer(
  embed_dim=32, token_projection=linear
  (pos_drop): Dropout(p=0.0, inplace=False)
  (input_proj): StemLayer(
    (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm1): Sequential(
      (0): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (act): GELU()
    (conv2): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm2): Sequential(
      (0): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): to_channels_last()
    )
  )
  (output_proj): OutputProj(
    (proj): Sequential(
      (0): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (en_layer0): DCNv3Block(
    (blocks): ModuleList(
      (0): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((32,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((32,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=32, out_features=36, bias=True)
          (mask): Linear(in_features=32, out_features=18, bias=True)
          (input_proj): Linear(in_features=32, out_features=32, bias=True)
          (output_proj): Linear(in_features=32, out_features=32, bias=True)
        )
        (drop_path): Identity()
        (norm2): Sequential(
          (0): LayerNorm((32,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=32, out_features=128, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=128, out_features=32, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((32,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((32,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=32, out_features=36, bias=True)
          (mask): Linear(in_features=32, out_features=18, bias=True)
          (input_proj): Linear(in_features=32, out_features=32, bias=True)
          (output_proj): Linear(in_features=32, out_features=32, bias=True)
        )
        (drop_path): DropPath(drop_prob=0.014)
        (norm2): Sequential(
          (0): LayerNorm((32,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=32, out_features=128, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=128, out_features=32, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm): Sequential(
      (0): LayerNorm((32,), eps=1e-06, elementwise_affine=True)
    )
  )
  (dowsample_0): DownsampleLayer(
    (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (norm): Sequential(
      (0): to_channels_last()
      (1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    )
  )
  (en_layer1): DCNv3Block(
    (blocks): ModuleList(
      (0): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=64, out_features=36, bias=True)
          (mask): Linear(in_features=64, out_features=18, bias=True)
          (input_proj): Linear(in_features=64, out_features=64, bias=True)
          (output_proj): Linear(in_features=64, out_features=64, bias=True)
        )
        (drop_path): Identity()
        (norm2): Sequential(
          (0): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=64, out_features=256, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=256, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=64, out_features=36, bias=True)
          (mask): Linear(in_features=64, out_features=18, bias=True)
          (input_proj): Linear(in_features=64, out_features=64, bias=True)
          (output_proj): Linear(in_features=64, out_features=64, bias=True)
        )
        (drop_path): DropPath(drop_prob=0.014)
        (norm2): Sequential(
          (0): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=64, out_features=256, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=256, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm): Sequential(
      (0): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    )
  )
  (dowsample_1): DownsampleLayer(
    (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (norm): Sequential(
      (0): to_channels_last()
      (1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    )
  )
  (en_layer2): DCNv3Block(
    (blocks): ModuleList(
      (0): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=128, out_features=36, bias=True)
          (mask): Linear(in_features=128, out_features=18, bias=True)
          (input_proj): Linear(in_features=128, out_features=128, bias=True)
          (output_proj): Linear(in_features=128, out_features=128, bias=True)
        )
        (drop_path): Identity()
        (norm2): Sequential(
          (0): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=128, out_features=512, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=128, out_features=36, bias=True)
          (mask): Linear(in_features=128, out_features=18, bias=True)
          (input_proj): Linear(in_features=128, out_features=128, bias=True)
          (output_proj): Linear(in_features=128, out_features=128, bias=True)
        )
        (drop_path): DropPath(drop_prob=0.014)
        (norm2): Sequential(
          (0): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=128, out_features=512, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm): Sequential(
      (0): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    )
  )
  (dowsample_2): DownsampleLayer(
    (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (norm): Sequential(
      (0): to_channels_last()
      (1): LayerNorm((256,), eps=1e-06, elementwise_affine=True)
    )
  )
  (en_layer3): DCNv3Block(
    (blocks): ModuleList(
      (0): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((256,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((256,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=256, out_features=36, bias=True)
          (mask): Linear(in_features=256, out_features=18, bias=True)
          (input_proj): Linear(in_features=256, out_features=256, bias=True)
          (output_proj): Linear(in_features=256, out_features=256, bias=True)
        )
        (drop_path): Identity()
        (norm2): Sequential(
          (0): LayerNorm((256,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=256, out_features=1024, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=256, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((256,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((256,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=256, out_features=36, bias=True)
          (mask): Linear(in_features=256, out_features=18, bias=True)
          (input_proj): Linear(in_features=256, out_features=256, bias=True)
          (output_proj): Linear(in_features=256, out_features=256, bias=True)
        )
        (drop_path): DropPath(drop_prob=0.014)
        (norm2): Sequential(
          (0): LayerNorm((256,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=256, out_features=1024, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=256, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm): Sequential(
      (0): LayerNorm((256,), eps=1e-06, elementwise_affine=True)
    )
  )
  (dowsample_3): DownsampleLayer(
    (conv): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (norm): Sequential(
      (0): to_channels_last()
      (1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    )
  )
  (conv): DCNv3Block(
    (blocks): ModuleList(
      (0): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=512, out_features=36, bias=True)
          (mask): Linear(in_features=512, out_features=18, bias=True)
          (input_proj): Linear(in_features=512, out_features=512, bias=True)
          (output_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (drop_path): Identity()
        (norm2): Sequential(
          (0): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=512, out_features=36, bias=True)
          (mask): Linear(in_features=512, out_features=18, bias=True)
          (input_proj): Linear(in_features=512, out_features=512, bias=True)
          (output_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (drop_path): DropPath(drop_prob=0.014)
        (norm2): Sequential(
          (0): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm): Sequential(
      (0): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    )
  )
  (upsample_0): UpsampleLayer(
    (conv): ConvTranspose2d(512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1), bias=False)
    (norm): Sequential(
      (0): to_channels_last()
      (1): LayerNorm((256,), eps=1e-06, elementwise_affine=True)
    )
  )
  (de_layer0): DCNv3Block(
    (blocks): ModuleList(
      (0): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=512, out_features=36, bias=True)
          (mask): Linear(in_features=512, out_features=18, bias=True)
          (input_proj): Linear(in_features=512, out_features=512, bias=True)
          (output_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (drop_path): Identity()
        (norm2): Sequential(
          (0): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=512, out_features=36, bias=True)
          (mask): Linear(in_features=512, out_features=18, bias=True)
          (input_proj): Linear(in_features=512, out_features=512, bias=True)
          (output_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (drop_path): DropPath(drop_prob=0.014)
        (norm2): Sequential(
          (0): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm): Sequential(
      (0): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
    )
  )
  (upsample_1): UpsampleLayer(
    (conv): ConvTranspose2d(512, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1), bias=False)
    (norm): Sequential(
      (0): to_channels_last()
      (1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    )
  )
  (de_layer1): DCNv3Block(
    (blocks): ModuleList(
      (0): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((256,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((256,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=256, out_features=36, bias=True)
          (mask): Linear(in_features=256, out_features=18, bias=True)
          (input_proj): Linear(in_features=256, out_features=256, bias=True)
          (output_proj): Linear(in_features=256, out_features=256, bias=True)
        )
        (drop_path): Identity()
        (norm2): Sequential(
          (0): LayerNorm((256,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=256, out_features=1024, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=256, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((256,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((256,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=256, out_features=36, bias=True)
          (mask): Linear(in_features=256, out_features=18, bias=True)
          (input_proj): Linear(in_features=256, out_features=256, bias=True)
          (output_proj): Linear(in_features=256, out_features=256, bias=True)
        )
        (drop_path): DropPath(drop_prob=0.014)
        (norm2): Sequential(
          (0): LayerNorm((256,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=256, out_features=1024, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=1024, out_features=256, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm): Sequential(
      (0): LayerNorm((256,), eps=1e-06, elementwise_affine=True)
    )
  )
  (upsample_2): UpsampleLayer(
    (conv): ConvTranspose2d(256, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1), bias=False)
    (norm): Sequential(
      (0): to_channels_last()
      (1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    )
  )
  (de_layer2): DCNv3Block(
    (blocks): ModuleList(
      (0): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=128, out_features=36, bias=True)
          (mask): Linear(in_features=128, out_features=18, bias=True)
          (input_proj): Linear(in_features=128, out_features=128, bias=True)
          (output_proj): Linear(in_features=128, out_features=128, bias=True)
        )
        (drop_path): Identity()
        (norm2): Sequential(
          (0): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=128, out_features=512, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=128, out_features=36, bias=True)
          (mask): Linear(in_features=128, out_features=18, bias=True)
          (input_proj): Linear(in_features=128, out_features=128, bias=True)
          (output_proj): Linear(in_features=128, out_features=128, bias=True)
        )
        (drop_path): DropPath(drop_prob=0.014)
        (norm2): Sequential(
          (0): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=128, out_features=512, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm): Sequential(
      (0): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    )
  )
  (upsample_3): UpsampleLayer(
    (conv): ConvTranspose2d(128, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1), bias=False)
    (norm): Sequential(
      (0): to_channels_last()
      (1): LayerNorm((32,), eps=1e-06, elementwise_affine=True)
    )
  )
  (de_layer3): DCNv3Block(
    (blocks): ModuleList(
      (0): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=64, out_features=36, bias=True)
          (mask): Linear(in_features=64, out_features=18, bias=True)
          (input_proj): Linear(in_features=64, out_features=64, bias=True)
          (output_proj): Linear(in_features=64, out_features=64, bias=True)
        )
        (drop_path): Identity()
        (norm2): Sequential(
          (0): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=64, out_features=256, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=256, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): DCNv3Layer(
        (norm1): Sequential(
          (0): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        )
        (dcn): DCNv3_GPU(
          (dw_conv): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
            (1): Sequential(
              (0): to_channels_last()
              (1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
            )
            (2): GELU()
          )
          (offset): Linear(in_features=64, out_features=36, bias=True)
          (mask): Linear(in_features=64, out_features=18, bias=True)
          (input_proj): Linear(in_features=64, out_features=64, bias=True)
          (output_proj): Linear(in_features=64, out_features=64, bias=True)
        )
        (drop_path): DropPath(drop_prob=0.014)
        (norm2): Sequential(
          (0): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        )
        (mlp): MLPLayer(
          (fc1): Linear(in_features=64, out_features=256, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=256, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm): Sequential(
      (0): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    )
  )
)
